{"mappings":"AAAA;AAEA,MAAM,OAAO,SAAS,aAAa,CAAC;AACpC,MAAM,gBAAgB;AACtB,MAAM,kBAAkB;AACxB,MAAM,kBAAkB;AACxB,MAAM,kBAAkB;AAExB,SAAS,mBAAmB,OAAO,EAAE,SAAS;IAC5C,MAAM,eAAe,SAAS,aAAa,CAAC;IAE5C,aAAa,YAAY,CAAC,WAAW;IACrC,aAAa,SAAS,GAAG;IACzB,aAAa,SAAS,GAAG;IAEzB,KAAK,MAAM,CAAC;AACd;AAEA,SAAS,eAAe,OAAO;IAC7B,mBAAmB,SAAS;AAC9B;AAEA,SAAS,aAAa,OAAO;IAC3B,mBAAmB,SAAS;AAC9B;AAEA,MAAM,iBAAiB,IAAI,QAAQ,CAAC,SAAS;IAC3C,WAAW;QACT,OAAO;IACT,GAAG;AACL;AAEA,MAAM,mBAAmB,IAAI,QAAQ,CAAC;IACpC,SAAS,gBAAgB,CAAC,SAAS;QACjC;IACF;AACF;AAEA,MAAM,oBAAoB,IAAI,QAAQ,CAAC;IACrC,SAAS,gBAAgB,CAAC,eAAe,CAAC;QACxC,EAAE,cAAc;QAEhB;IACF;AACF;AAEA,MAAM,eAAe,IAAI,QAAQ,CAAC,SAAS;IACzC,QAAQ,IAAI,CAAC;QAAC;QAAkB;KAAe,EAC5C,IAAI,CAAC;QACJ,QAAQ;IACV,GACC,KAAK,CAAC;QACL,OAAO,IAAI,MAAM;IACnB;AACJ;AAEA,MAAM,gBAAgB,IAAI,QAAQ,CAAC;IACjC,QAAQ,GAAG,CAAC;QAAC;QAAkB;KAAkB,EAC9C,IAAI,CAAC;QACJ,QAAQ;IACV;AACJ;AAEA,MAAM,eAAe,IAAI,QAAQ,CAAC;IAChC,QAAQ,GAAG,CAAC;QAAC;QAAkB;KAAkB,EAC9C,IAAI,CAAC;QACJ,QAAQ;IACV;AACJ;AAEA;IAAC;IAAc;IAAe;CAAa,CACxC,OAAO,CAAC,CAAA;IACP,QAAQ,IAAI,CAAC,CAAC;QACZ,eAAe;IACjB,GACG,KAAK,CAAC,CAAC;QACN,aAAa,MAAM,OAAO;IAC5B;AACJ","sources":["src/scripts/main.js"],"sourcesContent":["'use strict';\n\nconst body = document.querySelector('body');\nconst error1Message = 'First promise was rejected';\nconst success1Message = 'First promise was resolved';\nconst success2Message = 'Second promise was resolved';\nconst success3Message = 'Third promise was resolved';\n\nfunction createNotification(message, className) {\n  const notification = document.createElement('div');\n\n  notification.setAttribute('data-qa', 'notification');\n  notification.className = className;\n  notification.innerText = message;\n\n  body.append(notification);\n}\n\nfunction successHandler(message) {\n  createNotification(message, 'success');\n};\n\nfunction errorHandler(message) {\n  createNotification(message, 'error');\n};\n\nconst timeOutPromise = new Promise((resolve, reject) => {\n  setTimeout(() => {\n    reject(Error);\n  }, 3000);\n});\n\nconst leftClickPromise = new Promise((resolve) => {\n  document.addEventListener('click', () => {\n    resolve();\n  });\n});\n\nconst rightClickPromise = new Promise((resolve) => {\n  document.addEventListener('contextmenu', (e) => {\n    e.preventDefault();\n\n    resolve();\n  });\n});\n\nconst firstPromise = new Promise((resolve, reject) => {\n  Promise.race([leftClickPromise, timeOutPromise])\n    .then(() => {\n      resolve(success1Message);\n    })\n    .catch(() => {\n      reject(new Error(error1Message));\n    });\n});\n\nconst secondPromise = new Promise((resolve) => {\n  Promise.any([leftClickPromise, rightClickPromise])\n    .then(() => {\n      resolve(success2Message);\n    });\n});\n\nconst thirdPromise = new Promise((resolve) => {\n  Promise.all([leftClickPromise, rightClickPromise])\n    .then(() => {\n      resolve(success3Message);\n    });\n});\n\n[firstPromise, secondPromise, thirdPromise]\n  .forEach(promise => {\n    promise.then((message) => {\n      successHandler(message);\n    })\n      .catch((error) => {\n        errorHandler(error.message);\n      });\n  });\n"],"names":[],"version":3,"file":"index.f75de5e1.js.map","sourceRoot":"/__parcel_source_root/"}