{"mappings":"ACEA,IAAM,EAAO,SAAS,aAAa,CAAC,QAMpC,SAAS,EAAmB,CAAO,CAAE,CAAS,EAC5C,IAAM,EAAe,SAAS,aAAa,CAAC,OAE5C,EAAa,YAAY,CAAC,UAAW,gBACrC,EAAa,SAAS,CAAG,EACzB,EAAa,SAAS,CAAG,EAEzB,EAAK,MAAM,CAAC,EACd,CAUA,IAAM,EAAiB,IAAI,QAAQ,SAAC,CAAA,CAAS,CAA7C,EACE,WAAW,WACT,EAAO,MACT,EAAG,IACL,GAEM,EAAmB,IAAI,QAAQ,SAAC,CAAtC,EACE,SAAS,gBAAgB,CAAC,QAAS,WACjC,GACF,EACF,GAEM,EAAoB,IAAI,QAAQ,SAAC,CAAvC,EACE,SAAS,gBAAgB,CAAC,cAAe,SAAC,CAA1C,EACE,EAAE,cAAc,GAEhB,GACF,EACF,GA0BA,CAxBqB,IAAI,QAAQ,SAAC,CAAA,CAAS,CAA3C,EACE,QAAQ,IAAI,CAAC,CAAC,EAAkB,EAAe,EAC5C,IAAI,CAAC,WACJ,EA7CkB,6BA8CpB,GACC,KAAK,CAAC,WACL,EAAO,AAAI,MAjDK,8BAkDlB,EACJ,GAEsB,IAAI,QAAQ,SAAC,CAAnC,EACE,QAAQ,GAAG,CAAC,CAAC,EAAkB,EAAkB,EAC9C,IAAI,CAAC,WACJ,EAtDkB,8BAuDpB,EACJ,GAEqB,IAAI,QAAQ,SAAC,CAAlC,EACE,QAAQ,GAAG,CAAC,CAAC,EAAkB,EAAkB,EAC9C,IAAI,CAAC,WACJ,EA5DkB,6BA6DpB,EACJ,GAE2C,CACxC,OAAO,CAAC,SAAA,CADgC,EAEvC,EAAQ,IAAI,CAAC,SAAC,CAAd,EArDF,EAsDmB,EAtDS,UAuD1B,GACG,KAAK,CAAC,SAAC,CADV,EAnDF,EAqDmB,EAAM,OAAO,CArDJ,QAsDxB,EACJ","sources":["<anon>","src/scripts/main.js"],"sourcesContent":["\"use strict\";\nvar body = document.querySelector(\"body\");\nvar error1Message = \"First promise was rejected\";\nvar success1Message = \"First promise was resolved\";\nvar success2Message = \"Second promise was resolved\";\nvar success3Message = \"Third promise was resolved\";\nfunction createNotification(message, className) {\n    var notification = document.createElement(\"div\");\n    notification.setAttribute(\"data-qa\", \"notification\");\n    notification.className = className;\n    notification.innerText = message;\n    body.append(notification);\n}\nfunction successHandler(message) {\n    createNotification(message, \"success\");\n}\nfunction errorHandler(message) {\n    createNotification(message, \"error\");\n}\nvar timeOutPromise = new Promise(function(resolve, reject) {\n    setTimeout(function() {\n        reject(Error);\n    }, 3000);\n});\nvar leftClickPromise = new Promise(function(resolve) {\n    document.addEventListener(\"click\", function() {\n        resolve();\n    });\n});\nvar rightClickPromise = new Promise(function(resolve) {\n    document.addEventListener(\"contextmenu\", function(e) {\n        e.preventDefault();\n        resolve();\n    });\n});\nvar firstPromise = new Promise(function(resolve, reject) {\n    Promise.race([\n        leftClickPromise,\n        timeOutPromise\n    ]).then(function() {\n        resolve(success1Message);\n    }).catch(function() {\n        reject(new Error(error1Message));\n    });\n});\nvar secondPromise = new Promise(function(resolve) {\n    Promise.any([\n        leftClickPromise,\n        rightClickPromise\n    ]).then(function() {\n        resolve(success2Message);\n    });\n});\nvar thirdPromise = new Promise(function(resolve) {\n    Promise.all([\n        leftClickPromise,\n        rightClickPromise\n    ]).then(function() {\n        resolve(success3Message);\n    });\n});\n[\n    firstPromise,\n    secondPromise,\n    thirdPromise\n].forEach(function(promise) {\n    promise.then(function(message) {\n        successHandler(message);\n    }).catch(function(error) {\n        errorHandler(error.message);\n    });\n});\n\n//# sourceMappingURL=index.4e91735b.js.map\n","'use strict';\n\nconst body = document.querySelector('body');\nconst error1Message = 'First promise was rejected';\nconst success1Message = 'First promise was resolved';\nconst success2Message = 'Second promise was resolved';\nconst success3Message = 'Third promise was resolved';\n\nfunction createNotification(message, className) {\n  const notification = document.createElement('div');\n\n  notification.setAttribute('data-qa', 'notification');\n  notification.className = className;\n  notification.innerText = message;\n\n  body.append(notification);\n}\n\nfunction successHandler(message) {\n  createNotification(message, 'success');\n};\n\nfunction errorHandler(message) {\n  createNotification(message, 'error');\n};\n\nconst timeOutPromise = new Promise((resolve, reject) => {\n  setTimeout(() => {\n    reject(Error);\n  }, 3000);\n});\n\nconst leftClickPromise = new Promise((resolve) => {\n  document.addEventListener('click', () => {\n    resolve();\n  });\n});\n\nconst rightClickPromise = new Promise((resolve) => {\n  document.addEventListener('contextmenu', (e) => {\n    e.preventDefault();\n\n    resolve();\n  });\n});\n\nconst firstPromise = new Promise((resolve, reject) => {\n  Promise.race([leftClickPromise, timeOutPromise])\n    .then(() => {\n      resolve(success1Message);\n    })\n    .catch(() => {\n      reject(new Error(error1Message));\n    });\n});\n\nconst secondPromise = new Promise((resolve) => {\n  Promise.any([leftClickPromise, rightClickPromise])\n    .then(() => {\n      resolve(success2Message);\n    });\n});\n\nconst thirdPromise = new Promise((resolve) => {\n  Promise.all([leftClickPromise, rightClickPromise])\n    .then(() => {\n      resolve(success3Message);\n    });\n});\n\n[firstPromise, secondPromise, thirdPromise]\n  .forEach(promise => {\n    promise.then((message) => {\n      successHandler(message);\n    })\n      .catch((error) => {\n        errorHandler(error.message);\n      });\n  });\n"],"names":["body","document","querySelector","createNotification","message","className","notification","createElement","setAttribute","innerText","append","timeOutPromise","Promise","resolve","reject","setTimeout","Error","leftClickPromise","addEventListener","rightClickPromise","e","preventDefault","race","then","catch","any","all","forEach","promise","error"],"version":3,"file":"index.4e91735b.js.map"}